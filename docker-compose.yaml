version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8000:8000
    env_file:
      - .env
    restart: on-failure
    depends_on:
      postgres:
        condition: service_started
      rabbitmq:
        condition: service_healthy

  task_consumer:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    restart: always
    command: ["python", "-m", "src.task_consumer"]
    depends_on:
      postgres:
        condition: service_started
      rabbitmq:
        condition: service_healthy

  postgres:
    image: docker.io/postgres:16-alpine
    restart: always
    env_file:
      - .env
    volumes:
      - pg_data:/var/lib/postgresql/data

  rabbitmq:
    image: docker.io/rabbitmq:3.13-management-alpine
    restart: always
    env_file:
      - .env
    ports:
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 10s
      retries: 5

volumes:
  pg_data:
